"""
Этот модуль предоставляет функциональность для работы с переменными окружения.
Он использует стандартную библиотеку `os` для доступа к переменным окружения
и библиотеку `python-dotenv` для загрузки переменных из файла `.env`.
"""

import os
from dotenv import load_dotenv


load_dotenv(os.path.join(os.path.dirname(__file__), '..', 'configs.env'))

def get_ids_from_env(env_var: str) -> list[int]:
    """
    Получает список целочисленных идентификаторов из переменной окружения.

    Эта функция считывает строку идентификаторов, разделенных запятыми,
    з указанной переменной окружения, преобразует каждый идентификатор
    в целое число и возвращает список целых чисел. Если переменная окружения
    не установлена или пуста, возвращается пустой список.

    :param env_var: Имя переменной окружения, содержащей идентификаторы, разделенные запятыми.
    :type env_var: str
    :return: Список целочисленных идентификаторов.
    :rtype: list[int]

    Пример использования:
    >>> os.environ['MY_IDS'] = '123,456,789'
    >>> get_ids_from_env('MY_IDS')
    [123, 456, 789]
    """
    ids_str = os.getenv(env_var)
    if ids_str:
        return [int(id_str) for id_str in ids_str.split(',')]
    return []

TOKEN = os.getenv('TOKEN')
"""
Токен для доступа к боту в Telegram.
"""

USERNAME_API = os.getenv('USERNAME_API')
"""
Имя пользователя для API.
"""

KEY_API = os.getenv('KEY_API')
"""
Ключ API для доступа к сервису.
"""

URL_API_LOGIN = os.getenv('URL_API_LOGIN')
"""
URL для входа в API.
"""

URL_API_SEARCH = os.getenv('URL_API_SEARCH')
"""
URL для поиска товаров через API.
"""

URL_API_PRODUCT = os.getenv('URL_API_PRODUCT')
"""
URL для получения информации о товаре через API.
"""

URL_API_PRODUCT_ATTRIBUTES = os.getenv('URL_API_PRODUCT_ATTRIBUTES')
"""
URL для получения атрибутов товара через API.
"""

URL_API_CUSTOMER_BY_CARD = os.getenv('URL_API_CUSTOMER_BY_CARD')
"""
URL для получения информации клиенте по карте через API.
"""

URL_API_QUATITY_BY_PRODUCT_ID = os.getenv('URL_API_QUATITY_BY_PRODUCT_ID')
"""
URL для получения информации о количестве продукта по id через API.
"""

URL_SHOP = os.getenv('URL_SHOP')
"""
URL сайта.
"""

URL_PRODUCT = os.getenv('URL_PRODUCT')
"""
URL для доступа к странице товара на сайте.
"""

URL_INFORMATION_DISCONT_CARD = os.getenv('URL_INFORMATION_DISCONT_CARD')
"""
URL для вывода информации по дисконтным картам.
"""

IMAGE_URL = os.getenv('IMAGE_URL')
"""
URL для доступа к изображениям товаров на сайте.
"""

TEXT_VISIT_TO_STORE = """
<strong>Либо свяжитесь с нами по телефонам:\n</strong>
+375(29)509-58-35 (МТС, А1, Life)\n
8 (0152) 79-58-35 (Городской)\n
<strong>Так же вы можете посетить наши магазины по адресам:\n</strong>
г. Гродно пр. Космонавтов 2Г, ежедненвно 8:00-21:00 (ПТ до 22:00)\n
г. Гродно ул. Дзержинского 118, ежедненвно 8:00-21:00 (ПТ до 22:00)\n
"""

TEXT_INFORMATION_SEARCH = """
Поиск товаров в боте:
    <b>Нажмите "Поиск товара" для начала поиска.</b>
    Укажите товар:
        - По названию, например, "дрель".
        - По коду товара, штрихкоду или фото штрихкода.
    Если товар не найден:
        - Посетите магазин или уточните запрос, например, "дрель makita".
"""

TEXT_INFORMATION_CARD = """
Управление дисконтной картой:
    <b>Нажмите "Дисконтная карта" для ввода данных.</b>
    Введите номер карты или отправьте фото штрихкода.
    После ввода:
        - Получите закрепленное сообщение с изображением штрихкода, номером, сроком действия и типом карты.
    Для владельцев карты 'Мастер':
        - Появится кнопка 'Баланс Д.К. Мастер'.
        - Нажав на неё, получите информацию о балансе на вашей карте.
"""

TEXT_INFORMATION_RESTART = """
Кнопка <b>Перезапустить бот</b>:
    Предназначение: Обновление функционала бота.
    Действие: При изменениях в боте, нажмите кнопку для использования обновленных возможностей.
    Особенность: Не удаляет диалог, только обновляет возможности.
"""

USER_ADMIN = get_ids_from_env('USER_ADMIN')
"""
ID пользователей которые могу пользоваться меню маркетинга.
"""

USER_GENERAL_ADMIN = get_ids_from_env('USER_GENERAL_ADMIN')
"""
ID пользователей которые могут управлять ботом.
"""

OPERATOR_ID = os.getenv('OPERATOR_ID')
"""
ID оператора, он может отвечать на вопросы пользователей.
"""

COMMAND = os.getenv('COMMAND')
"""
Команда для взаимодействия с ботом работников.
"""

COMMAND_STOP = os.getenv('COMMAND_STOP')
"""
Команда для остановки бота.
"""

COMMAND_BACKUP = os.getenv('COMMAND_BACKUP')
"""
Команда для создания и отправки бэкапа.
"""

COMMAND_RESTART_BOT_MESSAGE = os.getenv('COMMAND_RESTART_BOT_MESSAGE')
"""
Команда для отправки сообщения пользователю о перезапуске бота.
"""
